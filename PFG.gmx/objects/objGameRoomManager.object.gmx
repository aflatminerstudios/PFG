<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create gamefields and attach players

// Game 0 (Player 1)
// Use Player1PlaceHolder object to position
gameField[0] = instance_create(objPlayer1Position.x, objPlayer1Position.y, scrGetGameSelectionForPlayer(0));
gameField[0].player = global.playerManager.playerControls[0];
scrSetPlayerControls(gameField[0].player, INPUT_XBOX360GAMEPAD, 0, gp_padu, gp_padd, gp_padl, gp_padr, gp_face1, gp_face2, gp_face3);  // Eventually remove --  Micha
gameField[0].baseSpeed = scrGetGameSpeedForPlayer(0);
gameField[0].currentSpeed = scrGetGameSpeedForPlayer(0);
// Character stand-in
instance_create(objPlayer1Position.x, 608, objCharacter);


// Game 1 (Player 2)
gameField[1] = instance_create(objPlayer2Position.x, objPlayer2Position.y, scrGetGameSelectionForPlayer(1));
gameField[1].player = global.playerManager.playerControls[1];
scrSetPlayerControls(gameField[1].player, INPUT_XBOX360GAMEPAD, 1, gp_padu, gp_padd, gp_padl, gp_padr, gp_face1, gp_face2, gp_face3);
gameField[1].baseSpeed = scrGetGameSpeedForPlayer(1);
gameField[1].currentSpeed = scrGetGameSpeedForPlayer(1);
// Character stand-in
instance_create(objPlayer2Position.x, 608, objCharacter);

// Game 2 (Player 3)
gameField[2] = instance_create(objPlayer3Position.x, objPlayer3Position.y, scrGetGameSelectionForPlayer(2));
gameField[2].player = global.playerManager.playerControls[2];
scrSetPlayerControls(gameField[2].player, INPUT_KEYBOARD, 0, vk_up, vk_down, vk_left, vk_right, vk_control, vk_alt, vk_enter);
gameField[2].baseSpeed = scrGetGameSpeedForPlayer(2);
gameField[2].currentSpeed = scrGetGameSpeedForPlayer(2);
// Character stand-in
instance_create(objPlayer3Position.x, 608, objCharacter);

// Game 3 (Player 4)
gameField[3] = instance_create(objPlayer4Position.x, objPlayer4Position.y, scrGetGameSelectionForPlayer(3));
gameField[3].player = global.playerManager.playerControls[3];
scrSetPlayerControls(gameField[3].player, INPUT_KEYBOARD, 0, ord('W'), ord('S'), ord('A'), ord('D'), ord('V'), ord('B'), ord('G'));
gameField[3].baseSpeed = scrGetGameSpeedForPlayer(3);
gameField[3].currentSpeed = scrGetGameSpeedForPlayer(3);
// Character stand-in
instance_create(objPlayer4Position.x, 608, objCharacter);

// Reset all games
for(var i = 0; i &lt; array_length_1d(gameField); i++) {
      script_execute(gameField[i].resetGame, gameField[i]); // Gives optional instance reference
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw temporary controls information
depth = -1000;
draw_set_alpha(1);
draw_set_color(c_black);
draw_set_halign(fa_center);

for(var i = 0; i &lt; array_length_1d(gameField); i++) {
  draw_text(gameField[i].x + (gameField[i].fieldWidth / 2), gameField[i].y - 24, gameField[i].gameName);

  /*
  // Quick and dirty control display (hard-coded)
  if(i == 0 || i == 2)
    draw_text(gameField[i].x + (gameField[i].fieldWidth / 2), gameField[i].y + gameField[i].fieldHeight + 8, "Arrows/Ctrl/Alt/Enter");
  else
    draw_text(gameField[i].x + (gameField[i].fieldWidth / 2), gameField[i].y + gameField[i].fieldHeight + 8, "WASD/V/B/G");  
  */
  
  // Quick and dirty control display (hard-coded)
  if(i == 0)
    draw_text(gameField[i].x + (gameField[i].fieldWidth / 2), gameField[i].y + gameField[i].fieldHeight + 8, "Controller 1");
  if(i == 1)
    draw_text(gameField[i].x + (gameField[i].fieldWidth / 2), gameField[i].y + gameField[i].fieldHeight + 8, "Controller 2");
  if(i == 2)
    draw_text(gameField[i].x + (gameField[i].fieldWidth / 2), gameField[i].y + gameField[i].fieldHeight + 8, "Arrows/Ctrl/Alt/Enter");
  if(i == 3)
    draw_text(gameField[i].x + (gameField[i].fieldWidth / 2), gameField[i].y + gameField[i].fieldHeight + 8, "WASD/V/B/G");

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
