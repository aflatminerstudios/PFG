<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objGame</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup game select menu variables
gameName = "Game Select Menu"
character = noone;
player = noone;
baseSpeed = 1;
baseDifficulty = 1;
currentSpeed = 1;
currentDifficulty = 1;

fieldWidth = 256;
fieldHeight = 480;

currentGame = scrGetFirstEnabledGame(); // Game currently displayed, returned from scrGetNextEnabledGame, etc.
gameThumbnail = noone;
gameLevel = 1;
gameSpeed = 1;


activeOption = 0; // Game type

show_debug_message("objSelectGame Create 1 finished.");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup game thumbnail

gameThumbnail = instance_create(x + 32, y + 75, objGameThumbnail);
gameThumbnail.depth = depth - 10;
with(gameThumbnail){
  sprite_index = sprColsGameThumbnail;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change activeOption value with left/right

// Game Type
if(activeOption == 0) {
  if (scrCheckButtonPressed(player, RIGHT)) {
    audio_play_sound(sndChirp, 1, false);
    currentGame = scrGetNextEnabledGame(currentGame);
    scrSetGameSelectionForPlayer(player.playerNumber, currentGame);
    gameThumbnail.sprite_index = scrGetGameThumbnail(currentGame);
  } else if (scrCheckButtonPressed(player, LEFT)) {
    audio_play_sound(sndChirp, 1, false);
    currentGame = scrGetPrevEnabledGame(currentGame);
    scrSetGameSelectionForPlayer(player.playerNumber, currentGame);
    gameThumbnail.sprite_index = scrGetGameThumbnail(currentGame);
  }
}

// Difficulty/Level
if(activeOption == 1) {
  if (scrCheckButtonPressed(player, RIGHT)) {
    audio_play_sound(sndChirp, 1, false);
    gameLevel = scrGetGameLevelForPlayer(player.playerNumber);
    if(gameLevel + 1 &lt;= 20)
      scrSetGameLevelForPlayer(player.playerNumber, gameLevel + 1);
  } else if (scrCheckButtonPressed(player, LEFT)) {
    audio_play_sound(sndChirp, 1, false);
    gameLevel = scrGetGameLevelForPlayer(player.playerNumber);
    if(gameLevel - 1 &gt;= 1)
      scrSetGameLevelForPlayer(player.playerNumber, gameLevel - 1);
  }
}

// Speed
if(activeOption == 2) {
  if (scrCheckButtonPressed(player, RIGHT)) {
    audio_play_sound(sndChirp, 1, false);
    gameSpeed = scrGetGameSpeedForPlayer(player.playerNumber);
    if(gameSpeed + 1 &lt;= 20)
      scrSetGameSpeedForPlayer(player.playerNumber, gameSpeed + 1);
  } else if (scrCheckButtonPressed(player, LEFT)) {
    audio_play_sound(sndChirp, 1, false);
    gameSpeed = scrGetGameSpeedForPlayer(player.playerNumber);
    if(gameSpeed - 1 &gt;= 1)
      scrSetGameSpeedForPlayer(player.playerNumber, gameSpeed - 1);
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change current activeOption using up/down
// 0 - GameType
// 1 - Level/Difficulty
// 2 - Speed

if (scrCheckButtonPressed(player, UP)) {
  if(activeOption - 1 &gt;= 0)
    activeOption = activeOption - 1;
} else if (scrCheckButtonPressed(player, DOWN)) {
  if(activeOption + 1 &lt;= 2)
    activeOption = activeOption + 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Goto roomGameRoom when button 1 is pressed (Temporary)
if (scrCheckButtonPressed(player, BUTTON1)) {
  // Stop music
  audio_stop_sound(sndKonstructionKittyTheme);
  audio_stop_sound(sndSkydiveSnakeTheme);
  room_goto(roomGameRoom);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16711808</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>511</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_rectangle</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>fieldWidth</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>fieldHeight</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>511</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_rectangle</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>fieldWidth</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>fieldHeight</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw game name
draw_text(x + fieldWidth/2, y + 24, scrGetGameName(currentGame));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw game description
//draw_text(x + fieldWidth/2, y + 75, scrGetGameDescription(currentGame));
draw_text_ext(x + fieldWidth/2, y + 275, scrGetGameDescription(currentGame), -1, fieldWidth - 40);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw game level
draw_text(x + fieldWidth/2, y + 380, "Level " + string(scrGetGameLevelForPlayer(player.playerNumber)));

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw game speed
draw_text(x + fieldWidth/2, y + 420, "Speed " + string(scrGetGameSpeedForPlayer(player.playerNumber)));

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw highlight around current activeOption

if(activeOption == 0){
  draw_roundrect_colour(x+32-4, y+75-4, x+fieldWidth-32+4, y+75+192+4, c_lime, c_lime, true);
} else if(activeOption == 1){
  draw_roundrect_colour(x+32-4, y+380-4, x+fieldWidth-32+4, y+380+18+4, c_lime, c_lime, true);
} else if(activeOption == 2){
  draw_roundrect_colour(x+32-4, y+420-4, x+fieldWidth-32+4, y+420+18+4, c_lime, c_lime, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
