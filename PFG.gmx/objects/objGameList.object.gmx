<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create gameList array that can be queried

// To add a game to this list, add an entry to the Ordering section,
//   then add appropriate array members using the Order variable you created

// The array contains at least two entries for each game.
//   The first one is the game object and 
//   The second one is whether it is ENABLED or DISABLED.

// Ordering that can be modified easily, starting at 0
// (Check what happens if there is a gap in array --  Micha Check)
var objColsGameOrder = 0;
var objPokerGameOrder = 1;
var objPipeGameOrder = 2;
var objTestGameOrder = 3;
var objTestGame2Order = 4;
var objTestGame3Order = 5;

// Game list array (see above)
gameList[objColsGameOrder,GAMEOBJECT] = objColsGame;
gameList[objColsGameOrder,MASTERENABLED] = ENABLED;
gameList[objColsGameOrder,GAMENAME] = "Columns Game";
gameList[objColsGameOrder,GAMEDESCRIPTION] = "Rotate and move falling vertical columns of three to match 3 of a kind in a row.";
gameList[objColsGameOrder,GAMETHUMBNAIL] = sprColsGameThumbnail;

gameList[objTestGameOrder,GAMEOBJECT] = objTestGame;
gameList[objTestGameOrder,MASTERENABLED] = ENABLED;
gameList[objTestGameOrder,GAMENAME] = "Test Game";
gameList[objTestGameOrder,GAMEDESCRIPTION] = "Test game for debugging controls and attacks.";
gameList[objTestGameOrder,GAMETHUMBNAIL] = sprTestGameThumbnail;

gameList[objTestGame2Order,GAMEOBJECT] = objTestGame2;
gameList[objTestGame2Order,MASTERENABLED] = ENABLED;
gameList[objTestGame2Order,GAMENAME] = "Test Game 2";
gameList[objTestGame2Order,GAMEDESCRIPTION] = "Test game for debugging controls and attacks.";
gameList[objTestGame2Order,GAMETHUMBNAIL] = sprTestGameThumbnail;

gameList[objTestGame3Order,GAMEOBJECT] = objTestGame3;
gameList[objTestGame3Order,MASTERENABLED] = ENABLED;
gameList[objTestGame3Order,GAMENAME] = "Test Game 3";
gameList[objTestGame3Order,GAMEDESCRIPTION] = "Test game for debugging controls and attacks.";
gameList[objTestGame3Order,GAMETHUMBNAIL] = sprTestGameThumbnail;

gameList[objPipeGameOrder,GAMEOBJECT] = objPipeGame;
gameList[objPipeGameOrder,MASTERENABLED] = ENABLED;
gameList[objPipeGameOrder,GAMENAME] = "Pipe Game";
gameList[objPipeGameOrder,GAMEDESCRIPTION] = "(Pre-Alpha) Get the liquid through the pipes.";
gameList[objPipeGameOrder,GAMETHUMBNAIL] = sprTestGameThumbnail;

gameList[objPokerGameOrder,GAMEOBJECT] = objPokerGame;
gameList[objPokerGameOrder,MASTERENABLED] = ENABLED;
gameList[objPokerGameOrder,GAMENAME] = "Poker Game";
gameList[objPokerGameOrder,GAMEDESCRIPTION] = "(Pre-Alpha) Move blocks to build connected poker hands.";
gameList[objPokerGameOrder,GAMETHUMBNAIL] = sprTestGameThumbnail;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
